extends css
extends javascript
extends html
extends macgyver

# Doop snippets - doop* {{{
snippet doope
	<script lang="js" backend endpoint>
	app.get('/api/$1', (req, res) => {
		$2
	});
	</script>

snippet doops
	<script lang="js" backend schema>
	app.middleware.db.schema('${1:widgets}', {
		created: {type: Date, default: Date.now},
		edited: {type: Date, default: Date.now},
		status: {type: String, enum: ['active', 'deleted'], default: 'active', index: true},
	});
	</script>

snippet doopm
	<script lang="js" backend endpoint>
	app.use('/api/${1:widgets}/:id?', app.middleware.express.rest('$1', {
		get: false,
		query: false,
		count: false,
		create: false,
		save: false,
		meta: true,
		delete: false,
	}));
	</script>
# }}}

# Vue snippets - vue* {{{
snippet data()
	data() { return {
		$1
	}},

snippet vitec
	<script>
	export default {
		$1
	}
	</script>

	<template>
		<div class="center">
		</div>
	</template>

snippet vites
	<style lang="scss">
	$1
	</style>

snippet vitet
	<template>
		<div>
			$1
		</div>
	</template>

# Vue-Promise-Refresh
snippet vuepr
	return Promise.resolve()
		.then(()=> this.$loader.start())
		.then(()=> this.$http.get(`/api/${1:widget}s/${this.$route.id}`))
		.then(({data}) => this.$1 = data)
		.catch(this.$toast.catch)
		.finally(()=> this.$loader.stop())

# Vue-Promise-Save
snippet vueps
	return Promise.resolve()
		.then(()=> this.$loader.startBackground())
		.then(()=> this.$http.post(\`/api/${1:widget}s/${this.$route.id}\`, this.$1))
		.then(()=> this.$router.go('/$1'))
		.catch(this.$toast.catch)
		.finally(()=> this.$loader.stop())

snippet vues
	<script lang="js" frontend>
	app.service('${1:$widgets}', function() {
		var $1 = {};

		return $1;
	};
	</script>

snippet vuet
	<template>
		<div class="card">
			<div class="card-header">
				<h2>$1</h2>
			</div>
			<div class="card-body">
				...
			</div>
		</div>
	</template>
